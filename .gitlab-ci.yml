image: "php:7.3-fpm-stretch"

stages:
  - test
  - build
  - deploy

variables:
  MYSQL_DATABASE: testing
  MYSQL_USER: root
  MYSQL_ROOT_PASSWORD: testing
  IMAGE_TAG_APPLICATION: registry.gitlab.com/guillaumebriday/todolist-backend-laravel/application:${CI_COMMIT_REF_SLUG}
  IMAGE_TAG_NGINX: registry.gitlab.com/guillaumebriday/todolist-backend-laravel/nginx:${CI_COMMIT_REF_SLUG}
  REGISTRY_URL: registry.gitlab.com

cache:
   paths:
    - vendor/

.setup_test_env: &setup_test_env
  before_script:
    # Install node and some other deps
    - apt-get update -yqq
    - apt-get install zip unzip git libjpeg-dev libpng-dev libfreetype6-dev -yqq --no-install-recommends
    - docker-php-ext-install gd pdo_mysql
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install --no-progress --no-interaction --optimize-autoloader
    - cp .env.gitlab .env.testing

# Stage: Test
phpunit:
  <<: *setup_test_env
  services:
    - mysql:5.7
  stage: test
  script:
  - vendor/bin/phpunit --testdox

php-cs-fixer:
  <<: *setup_test_env
  stage: test
  script:
    - vendor/bin/php-cs-fixer fix --config=.php_cs --verbose --dry-run --diff

# Stage: Build
.setup_build_env: &setup_build_env
  stage: build
  image: docker:stable
  services:
    - docker:dind
  only:
    - master

build_application_image:
  <<: *setup_build_env
  script:
    - docker build -f .cloud/docker/Dockerfile.prod --target application -t ${IMAGE_TAG_APPLICATION} .
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker push ${IMAGE_TAG_APPLICATION}

build_nginx_image:
  <<: *setup_build_env
  script:
    - docker build -f .cloud/docker/Dockerfile.prod --target nginx -t ${IMAGE_TAG_NGINX} .
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker push ${IMAGE_TAG_NGINX}

# Stage: deploy
.setup_deploy_env: &setup_deploy_env
  image: kroniak/ssh-client
  before_script:
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H '51.15.244.250' >> ~/.ssh/known_hosts

deploy_prod:
  <<: *setup_deploy_env
  stage: deploy
  script:
    # log into Docker registry
    - ssh root@51.15.244.250 "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${REGISTRY_URL} &&
      docker pull ${IMAGE_TAG_APPLICATION} &&
      docker pull ${IMAGE_TAG_NGINX} &&
      docker stop todolist-nginx || true &&
      docker stop todolist-server || true &&
      docker run --restart unless-stopped --name todolist-server --link todolist-db --env-file /var/www/todolist-backend/.env -d ${IMAGE_TAG_APPLICATION} &&
      docker run --restart unless-stopped -d --name todolist-nginx --link todolist-server ${IMAGE_TAG_NGINX}"

  only:
    - master
  when: manual
  environment:
    name: production
    url: https://todolist-api.guillaumebriday.fr/
